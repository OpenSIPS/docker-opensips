---
name: Publish OpenSIPS Image in Docker Hub
description: Builds and publishes OpenSIPS docker image to Docker Hub
inputs:
  version:
    description: OpenSIPS Version to build the image for
    required: false
  tag:
    description: The Docker tag to publish the image
    required: false
  component:
    description: The apt component to pull the OpenSIPS deb from
    required: false
  cli:
    description: Indicates whether to install OpenSIPS CLI as well
    required: false
  modules:
    description: Space separated additional packets to install
    required: false
  build:
    description: Indicate the build to use
    required: false
  docker-username:
    description: The Docker username to push the image with
    required: true
  docker-token:
    description: The Docker token used to authenticate
    required: true

runs:
  using: "composite"

  steps:
  - uses: actions/checkout@v4
    with:
      repository: OpenSIPS/docker-opensips

  - name: Prepare Environment
    shell: bash
    run: |
      test -n "${{ inputs.version }}" && echo "OPENSIPS_VERSION=${{ inputs.version }}" >> $GITHUB_ENV || true
      test -n "${{ inputs.tag }}" && echo "OPENSIPS_DOCKER_TAG=${{ inputs.tag }}" >> $GITHUB_ENV || true
      test -n "${{ inputs.cli }}" && echo "OPENSIPS_CLI=${{ inputs.cli }}" >> $GITHUB_ENV || true
      test -n "${{ inputs.modules }}" && echo "OPENSIPS_EXTRA_MODULES=${{ inputs.modules }}" >> $GITHUB_ENV || true
      test -n "${{ inputs.build }}" && echo "OPENSIPS_BUILD=\"${{ inputs.build }}\"" >> $GITHUB_ENV || true
      test -n "${{ inputs.component }}" && echo "OPENSIPS_COMPONENT=\"${{ inputs.component }}\"" >> $GITHUB_ENV || true

  - name: Build the Docker image
    shell: bash
    id: build
    run: make build 2>&1 | tee /tmp/build.log && grep "naming to docker.io" /tmp/build.log | awk  -F'[ /]' '{print "DOCKER_TAG=" $5 "/" $6 }' >> $GITHUB_OUTPUT

  - name: Log in to Docker Hub
    uses: docker/login-action@v3
    with:
      username: ${{ inputs.docker-username }}
      password: ${{ inputs.docker-token }}

  - name: Publish the Docker image
    shell: bash
    run: docker push ${{ steps.build.outputs.DOCKER_TAG }}
